name: "first orchestration"

services:

  frontend:
    build: ./front 
    # ports:
    #   - 5000:5000
    depends_on:
      - backend
     # - reverse-proxy
    environment:
      - REACT_APP_BACKEND_URL=http://backend:8080
    networks:
     - app-network  

  backend:  
    build: ./back
    # ports:
    #   - 8080:8080
    environment:
      - REQUEST_ORIGIN=http://reverse-proxy
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
    networks:
     - app-network  

  redis:
    image: redis
    networks:
      - app-network  

  postgres_db:
    restart: always
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - app-network    

  reverse-proxy:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80  
    depends_on:
      - frontend
      - backend  
    networks:
     - app-network  

networks:
  app-network:
    driver: bridge